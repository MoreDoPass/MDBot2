#pragma once
#include "Unit.h"  // Включаем родительский класс

#pragma pack(push, 1)

/**
 * @struct Player
 * @brief Представляет объект игрока.
 * @details Наследуется от Unit и добавляет поля, специфичные для игрока.
 *          Для наших текущих задач все необходимые поля (HP, позиция и т.д.)
 *          уже содержатся в базовых классах WorldObject и Unit.
 *          Мы создаем эту структуру для полноты иерархии и для будущего
 *          расширения, если нам понадобятся специфичные для игрока поля
 *          (например, опыт, таланты и т.д.).
 */
struct Player : public Unit
{
    // На данный момент нам не известны или не нужны дополнительные поля,
    // которые есть у Player, но нет у Unit.
    // Поэтому тело структуры остается пустым.
    // C++ автоматически обеспечит, что sizeof(Player) будет как минимум
    // равен sizeof(Unit), и все поля из Unit будут доступны.

    // Если в будущем мы найдем, например, поле "опыт" по смещению 0x2A00,
    // мы добавим его сюда так:
    // char _pad_to_experience[0x2A00 - sizeof(Unit)];
    // uint32_t experience;
};

#pragma pack(pop)