---
description: InlineHook: Обзор и использование
globs: 
alwaysApply: false
---
    # Система хуков в MDBot2

    ## Иерархия классов:
    - Базовый абстрактный класс: `Hook` (`src/core/HookManager/Hook/Hook.h`). Определяет интерфейс `install()` и `uninstall()`.
    - Inline-хуки: `InlineHook` (`src/core/HookManager/Hook/InlineHook/InlineHook.h`), наследуется от `Hook`.
        - Требует `MemoryManager*` в конструкторе для работы с памятью целевого процесса.
        - Требует переопределения виртуальной функции `generateTrampoline()`, которая создает ассемблерный код хука.
        - Устанавливается и удаляется вызовом `install()` / `uninstall()` напрямую у объекта хука.
    - Конкретные хуки (пример): `CharacterHook` (`src/core/Bot/Character/CharacterHook.h`), наследуется от `InlineHook`. Реализует `generateTrampoline()` для своей задачи (получение адреса структуры персонажа).

    ## Использование:
    - Для создания нового inline-хука:
        1. Унаследовать класс от `InlineHook`.
        2. Реализовать конструктор, принимающий `MemoryManager*` и другие нужные параметры (например, адрес хука).
        3. Реализовать `generateTrampoline()`, генерирующую ассемблерный код трамплина.
        4. Создать экземпляр хука в соответствующем модуле (например, в `Character` для `CharacterHook`).
        5. Вызвать `install()` для установки и `uninstall()` для снятия.
    - `HookManager` (`src/core/HookManager/HookManager.h`) в текущей реализации не используется для управления экземплярами `Hook`.


    Сообщай, если ты используешь это правило